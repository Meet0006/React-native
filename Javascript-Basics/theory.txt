while comparing the strings with number then string acts as number.
if !stoi string then result is always false
if both strings then we know lexicography it is.


///////////////////////////////////////////
Everything in js happens in execution context.

It is made of 3 things => Varible environment and thread of execution and 'this'
varible environment(key: value pair) is memory and toe is code.

It is single threaded and executes single line by line.

1st phase is memory allocation  => varibles are initally undefined and functions as whole
2nd phase is code execution.

Every function invocation will have it's own execution context and same above mentioned things and initally it is in "global execution context".
After function has returned the execution context is destroyed.

This all thing is inside the call stack(c++ same stack).
Remember that the function assigned to the varible acts as a variable and so it will follow varible's things.

Undefined is placeholder for knowing that this value is uninitialized and not defined means that the varible is not declared. 

Lexical environment is local env with surrounding like parent's local env and cycle goes own like recursion.
Way of finding variable in recursive way from child to parent is called as Scope Chain.

Let and const are hoisted but are stored in different memory space, hence can only be accessed after initalization.
Temporal dead zone is the time interval of when the varibles were hoisted and really initalized.
const must be initalized at the same time of declaration.

All the callbacks are stored in web browser.
Callback queue is the queue in which the callbacks waits till they go to global execution context.(event listeners)
Microtask queue is also queue having higher priority. (promises)
Event loop is the thing which monitors the callback queue and GEC then upon suitabe timing pushes the call back from queue to GEC.